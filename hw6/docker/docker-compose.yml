version: "3.5"

x-common-variables: &common-variables
  KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  KAFKA_PROCESS_ROLES: 'controller,broker'
  CLUSTER_ID: 'YDUtH4RNTJSLYDHLP489Yg'
  KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9091,2@kafka2:9091,3@kafka3:9091'
  KAFKA_METADATA_LOG_SEGMENT_MS: 15000
  KAFKA_METADATA_MAX_RETENTION_MS: 1200000
  KAFKA_METADATA_LOG_MAX_RECORD_BYTES_BETWEEN_SNAPSHOTS: 2800
  KAFKA_LOG_DIRS: '/var/lib/kafka/data'

services:
  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    hostname: kafdrop
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka1:9092,kafka2:9092,kafka3:9092
      JVM_OPTS: "-Xms128M -Xmx256M -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  kafka1:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka1
    container_name: kafka1
    ports:
      - 39091:39091
    environment:
      <<: *common-variables
      KAFKA_LISTENERS: CONTROLLER://kafka1:9091,BROKER://kafka1:9092,EXTERNAL://kafka1:39091
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka1:9092,EXTERNAL://kafka1:39091
      KAFKA_NODE_ID: 1
    volumes:
      - kafka1-data:/var/lib/kafka/data

  kafka2:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka2
    container_name: kafka2
    ports:
      - 39092:39092
    environment:
      <<: *common-variables
      KAFKA_LISTENERS: CONTROLLER://kafka2:9091,BROKER://kafka2:9092,EXTERNAL://kafka2:39092
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka2:9092,EXTERNAL://kafka2:39092
      KAFKA_NODE_ID: 2
    volumes:
      - kafka2-data:/var/lib/kafka/data

  kafka3:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka3
    container_name: kafka3
    ports:
      - 39093:39093
    environment:
      <<: *common-variables
      KAFKA_LISTENERS: CONTROLLER://kafka3:9091,BROKER://kafka3:9092,EXTERNAL://kafka3:39093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka3:9092,EXTERNAL://kafka3:39093
      KAFKA_NODE_ID: 3
    volumes:
      - kafka3-data:/var/lib/kafka/data

  postgres:
    image: postgres:16.3
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: otus
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: ["postgres", "-c", "wal_level=logical"]
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "-c", "SELECT 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  debezium:
    image: debezium/connect:2.5
    hostname: debezium
    container_name: debezium
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      GROUP_ID: debezium-connect
      CONFIG_STORAGE_TOPIC: debezium-connect-configs
      STATUS_STORAGE_TOPIC: debezium-connect-statuses
      OFFSET_STORAGE_TOPIC: debezium-connect-offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      ENABLE_DEBEZIUM_SCRIPTING: "true"
      ENABLE_JOLOKIA: "true"
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "-X", "GET", "http://localhost:8083/connectors"]
      start_period: 20s
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  debezium-ui:
    image: debezium/debezium-ui:2.5
    hostname: debezium-ui
    container_name: debezium-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CONNECT_URIS: http://debezium:8083
    depends_on:
      debezium:
        condition: service_healthy

volumes:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  postgres-data:
